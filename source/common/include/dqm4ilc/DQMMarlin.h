  /// \file DQMMarlin.h
/*
 *
 * DQMMarlin.h header template automatically generated by a class generator
 * Creation date : lun. mars 7 2016
 *
 * This file is part of DQM4ILC libraries.
 * 
 * DQM4ILC is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4ILC is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4ILC.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef DQMMARLIN_H
#define DQMMARLIN_H

#include <string>

namespace marlin { class IParser; }
namespace EVENT { class LCEvent; }

class TiXmlHandle;

namespace gear { class TiXmlElement; }

namespace dqm4ilc
{

/** DQMMarlin class.
 *
 *  Basic interface to a Marlin application.
 *
 *  WARNING : Some of the variables used by Marlin are static such
 *  as Global::GEAR. This means that only one instance of this class must exists.
 *  No check is performed on multiple instances.
 */ 
class DQMMarlin 
{
public:
	/** Constructor
	 */
	DQMMarlin();

	/** Destructor
	 */
	virtual ~DQMMarlin();

	/** Initialize the Marlin framework instance
	 */
	void init(const std::string &steeringFileName);

	/** Process an event in the Marlin framework instance
	 */
	void processEvent(EVENT::LCEvent *pLCEvent);

	/** Ends the Marlin application
	 */
	void end();

private:
	/** Create the Marlin active processors
	 */
	void createProcessors(marlin::IParser *pParser);
}; 

} 

#endif  //  DQMMARLIN_H
