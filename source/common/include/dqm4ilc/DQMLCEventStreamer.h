  /// \file DQMLCEventStreamer.h
/*
 *
 * DQMLCEventStreamer.h header template automatically generated by a class generator
 * Creation date : jeu. mars 26 2015
 *
 * This file is part of DQM4HEP libraries.
 * 
 * DQM4HEP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * DQM4HEP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with DQM4HEP.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef DQMLCEVENTSTREAMER_H
#define DQMLCEVENTSTREAMER_H

// -- dqm4hep headers
#include "dqm4hep/DQMEvent.h"
#include "dqm4hep/DQMStreamer.h"
#include "dqm4hep/DQMEventStreamer.h"

// -- xdrlcio headers
#include "xdrlcio/XdrLcio.h"

namespace dqm4ilc
{

/** DQMLCEventStreamer class
 */ 
class DQMLCEventStreamer : public dqm4hep::DQMEventStreamer
{
 public:
	/** Constructor
	 */
	DQMLCEventStreamer();

	/** Destructor
	 */
	~DQMLCEventStreamer();

	/** Factory method to create the corresponding DQM event to this streamer.
	 *  The dqm event is expected to contains an allocated wrapped event
	 */
	dqm4hep::DQMEvent *createEvent() const;

	/** Serialize the event and store it into a data stream.
	 */
	dqm4hep::StatusCode write(const dqm4hep::DQMEvent *const pEvent, xdrstream::IODevice *pDevice);

	/** De-serialize the lcio event.
	 */
	dqm4hep::StatusCode read(dqm4hep::DQMEvent *&pEvent, xdrstream::IODevice *pDevice);

	/** Serialize the a part of the event and store it into a data stream.
	 *
	 *  The sub event identifier is a string of the collection names
	 *  concatenated with semi columns : "collectionName1:collectionName2:collectionName3"
	 *  If the sub event identifier is empty the whole event is serialized
	 */
	dqm4hep::StatusCode write(const dqm4hep::DQMEvent *const pObject, const std::string &subEventIdentifier, xdrstream::IODevice *pDevice);

private:
	xdrlcio::XdrLcio                     m_xdrLcio;
};

} 

#endif  //  DQMLCEVENTSTREAMER_H
